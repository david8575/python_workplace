=== 행렬 A ===
행렬:
[[1 2 3]
 [4 5 6]
 [7 8 9]]

1. 코팩터 전개 방식:
--- Depth 0 ---
Det(
[[1 2 3]
 [4 5 6]
 [7 8 9]]
)=
+1 * Det(
[[5 6]
 [8 9]]
)

-2 * Det(
[[4 6]
 [7 9]]
)

+3 * Det(
[[4 5]
 [7 8]]
)


|5 6|
|8 9| = -2.9999999999999996
|4 6|
|7 9| = -6.000000000000003
|4 5|
|7 8| = -3.0000000000000018

코팩터 전개 방식 행렬식 계산: (-2.9999999999999996) + (12.000000000000005) + (-9.000000000000005) = 0.0

2. 가우스 소거법 방식:
행 2 -> 행 2 - (4.00) * 행 1:
[[ 1.  2.  3.]
 [ 0. -3. -6.]
 [ 7.  8.  9.]]

행 3 -> 행 3 - (7.00) * 행 1:
[[  1.   2.   3.]
 [  0.  -3.  -6.]
 [  0.  -6. -12.]]

행 3 -> 행 3 - (2.00) * 행 2:
[[ 1.  2.  3.]
 [ 0. -3. -6.]
 [ 0.  0.  0.]]

특이 행렬입니다. 행렬식 = 0

가우스 소거법 방식 행렬식: 0

==================================================

=== 행렬 B ===
행렬:
[[1 1 1]
 [1 1 1]
 [1 1 1]]

1. 코팩터 전개 방식:
--- Depth 0 ---
Det(
[[1 1 1]
 [1 1 1]
 [1 1 1]]
)=
+1 * Det(
[[1 1]
 [1 1]]
)

-1 * Det(
[[1 1]
 [1 1]]
)

+1 * Det(
[[1 1]
 [1 1]]
)


|1 1|
|1 1| = 0.0
|1 1|
|1 1| = 0.0
|1 1|
|1 1| = 0.0

코팩터 전개 방식 행렬식 계산: (0.0) + (-0.0) + (0.0) = 0.0

2. 가우스 소거법 방식:
행 2 -> 행 2 - (1.00) * 행 1:
[[1. 1. 1.]
 [0. 0. 0.]
 [1. 1. 1.]]

행 3 -> 행 3 - (1.00) * 행 1:
[[1. 1. 1.]
 [0. 0. 0.]
 [0. 0. 0.]]

특이 행렬입니다. 행렬식 = 0

가우스 소거법 방식 행렬식: 0

==================================================

=== 행렬 C ===
행렬:
[[1 1 1]
 [1 1 1]
 [1 1 1]]

1. 코팩터 전개 방식:
--- Depth 0 ---
Det(
[[1 1 1]
 [1 1 1]
 [1 1 1]]
)=
+1 * Det(
[[1 1]
 [1 1]]
)

-1 * Det(
[[1 1]
 [1 1]]
)

+1 * Det(
[[1 1]
 [1 1]]
)


|1 1|
|1 1| = 0.0
|1 1|
|1 1| = 0.0
|1 1|
|1 1| = 0.0

코팩터 전개 방식 행렬식 계산: (0.0) + (-0.0) + (0.0) = 0.0

2. 가우스 소거법 방식:
행 2 -> 행 2 - (1.00) * 행 1:
[[1. 1. 1.]
 [0. 0. 0.]
 [1. 1. 1.]]

행 3 -> 행 3 - (1.00) * 행 1:
[[1. 1. 1.]
 [0. 0. 0.]
 [0. 0. 0.]]

특이 행렬입니다. 행렬식 = 0

가우스 소거법 방식 행렬식: 0

==================================================

=== 행렬 D ===
행렬:
[[ 3  7  4  6  7]
 [ 2 -3  5 -7  0]
 [-2  3 -3  4  2]
 [10  5  6  7  3]
 [ 3  2  1  5  4]]

1. 코팩터 전개 방식:
--- Depth 0 ---
Det(
[[ 3  7  4  6  7]
 [ 2 -3  5 -7  0]
 [-2  3 -3  4  2]
 [10  5  6  7  3]
 [ 3  2  1  5  4]]
)=
+3 * Det(
[[-3  5 -7  0]
 [ 3 -3  4  2]
 [ 5  6  7  3]
 [ 2  1  5  4]]
)

-7 * Det(
[[ 2  5 -7  0]
 [-2 -3  4  2]
 [10  6  7  3]
 [ 3  1  5  4]]
)

+4 * Det(
[[ 2 -3 -7  0]
 [-2  3  4  2]
 [10  5  7  3]
 [ 3  2  5  4]]
)

-6 * Det(
[[ 2 -3  5  0]
 [-2  3 -3  2]
 [10  5  6  3]
 [ 3  2  1  4]]
)

+7 * Det(
[[ 2 -3  5 -7]
 [-2  3 -3  4]
 [10  5  6  7]
 [ 3  2  1  5]]
)


--- Depth 1 ---
Det(
[[-3  5 -7  0]
 [ 3 -3  4  2]
 [ 5  6  7  3]
 [ 2  1  5  4]]
)=
-3 * Det(
[[-3  4  2]
 [ 6  7  3]
 [ 1  5  4]]
)

-5 * Det(
[[3 4 2]
 [5 7 3]
 [2 5 4]]
)

-7 * Det(
[[ 3 -3  2]
 [ 5  6  3]
 [ 2  1  4]]
)

0 * Det(
[[ 3 -3  4]
 [ 5  6  7]
 [ 2  1  5]]
)

Det(
[[ 2  5 -7  0]
 [-2 -3  4  2]
 [10  6  7  3]
 [ 3  1  5  4]]
)=
+2 * Det(
[[-3  4  2]
 [ 6  7  3]
 [ 1  5  4]]
)

-5 * Det(
[[-2  4  2]
 [10  7  3]
 [ 3  5  4]]
)

-7 * Det(
[[-2 -3  2]
 [10  6  3]
 [ 3  1  4]]
)

0 * Det(
[[-2 -3  4]
 [10  6  7]
 [ 3  1  5]]
)

Det(
[[ 2 -3 -7  0]
 [-2  3  4  2]
 [10  5  7  3]
 [ 3  2  5  4]]
)=
+2 * Det(
[[3 4 2]
 [5 7 3]
 [2 5 4]]
)

+3 * Det(
[[-2  4  2]
 [10  7  3]
 [ 3  5  4]]
)

-7 * Det(
[[-2  3  2]
 [10  5  3]
 [ 3  2  4]]
)

0 * Det(
[[-2  3  4]
 [10  5  7]
 [ 3  2  5]]
)

Det(
[[ 2 -3  5  0]
 [-2  3 -3  2]
 [10  5  6  3]
 [ 3  2  1  4]]
)=
+2 * Det(
[[ 3 -3  2]
 [ 5  6  3]
 [ 2  1  4]]
)

+3 * Det(
[[-2 -3  2]
 [10  6  3]
 [ 3  1  4]]
)

+5 * Det(
[[-2  3  2]
 [10  5  3]
 [ 3  2  4]]
)

0 * Det(
[[-2  3 -3]
 [10  5  6]
 [ 3  2  1]]
)

Det(
[[ 2 -3  5 -7]
 [-2  3 -3  4]
 [10  5  6  7]
 [ 3  2  1  5]]
)=
+2 * Det(
[[ 3 -3  4]
 [ 5  6  7]
 [ 2  1  5]]
)

+3 * Det(
[[-2 -3  4]
 [10  6  7]
 [ 3  1  5]]
)

+5 * Det(
[[-2  3  4]
 [10  5  7]
 [ 3  2  5]]
)

+7 * Det(
[[-2  3 -3]
 [10  5  6]
 [ 3  2  1]]
)


--- Depth 2 ---
Det(
[[-3  4  2]
 [ 6  7  3]
 [ 1  5  4]]
)=
-3 * Det(
[[7 3]
 [5 4]]
)

-4 * Det(
[[6 3]
 [1 4]]
)

+2 * Det(
[[6 7]
 [1 5]]
)

Det(
[[3 4 2]
 [5 7 3]
 [2 5 4]]
)=
+3 * Det(
[[7 3]
 [5 4]]
)

-4 * Det(
[[5 3]
 [2 4]]
)

+2 * Det(
[[5 7]
 [2 5]]
)

Det(
[[ 3 -3  2]
 [ 5  6  3]
 [ 2  1  4]]
)=
+3 * Det(
[[6 3]
 [1 4]]
)

+3 * Det(
[[5 3]
 [2 4]]
)

+2 * Det(
[[5 6]
 [2 1]]
)

Det(
[[ 3 -3  4]
 [ 5  6  7]
 [ 2  1  5]]
)=
+3 * Det(
[[6 7]
 [1 5]]
)

+3 * Det(
[[5 7]
 [2 5]]
)

+4 * Det(
[[5 6]
 [2 1]]
)

Det(
[[-3  4  2]
 [ 6  7  3]
 [ 1  5  4]]
)=
-3 * Det(
[[7 3]
 [5 4]]
)

-4 * Det(
[[6 3]
 [1 4]]
)

+2 * Det(
[[6 7]
 [1 5]]
)

Det(
[[-2  4  2]
 [10  7  3]
 [ 3  5  4]]
)=
-2 * Det(
[[7 3]
 [5 4]]
)

-4 * Det(
[[10  3]
 [ 3  4]]
)

+2 * Det(
[[10  7]
 [ 3  5]]
)

Det(
[[-2 -3  2]
 [10  6  3]
 [ 3  1  4]]
)=
-2 * Det(
[[6 3]
 [1 4]]
)

+3 * Det(
[[10  3]
 [ 3  4]]
)

+2 * Det(
[[10  6]
 [ 3  1]]
)

Det(
[[-2 -3  4]
 [10  6  7]
 [ 3  1  5]]
)=
-2 * Det(
[[6 7]
 [1 5]]
)

+3 * Det(
[[10  7]
 [ 3  5]]
)

+4 * Det(
[[10  6]
 [ 3  1]]
)

Det(
[[3 4 2]
 [5 7 3]
 [2 5 4]]
)=
+3 * Det(
[[7 3]
 [5 4]]
)

-4 * Det(
[[5 3]
 [2 4]]
)

+2 * Det(
[[5 7]
 [2 5]]
)

Det(
[[-2  4  2]
 [10  7  3]
 [ 3  5  4]]
)=
-2 * Det(
[[7 3]
 [5 4]]
)

-4 * Det(
[[10  3]
 [ 3  4]]
)

+2 * Det(
[[10  7]
 [ 3  5]]
)

Det(
[[-2  3  2]
 [10  5  3]
 [ 3  2  4]]
)=
-2 * Det(
[[5 3]
 [2 4]]
)

-3 * Det(
[[10  3]
 [ 3  4]]
)

+2 * Det(
[[10  5]
 [ 3  2]]
)

Det(
[[-2  3  4]
 [10  5  7]
 [ 3  2  5]]
)=
-2 * Det(
[[5 7]
 [2 5]]
)

-3 * Det(
[[10  7]
 [ 3  5]]
)

+4 * Det(
[[10  5]
 [ 3  2]]
)

Det(
[[ 3 -3  2]
 [ 5  6  3]
 [ 2  1  4]]
)=
+3 * Det(
[[6 3]
 [1 4]]
)

+3 * Det(
[[5 3]
 [2 4]]
)

+2 * Det(
[[5 6]
 [2 1]]
)

Det(
[[-2 -3  2]
 [10  6  3]
 [ 3  1  4]]
)=
-2 * Det(
[[6 3]
 [1 4]]
)

+3 * Det(
[[10  3]
 [ 3  4]]
)

+2 * Det(
[[10  6]
 [ 3  1]]
)

Det(
[[-2  3  2]
 [10  5  3]
 [ 3  2  4]]
)=
-2 * Det(
[[5 3]
 [2 4]]
)

-3 * Det(
[[10  3]
 [ 3  4]]
)

+2 * Det(
[[10  5]
 [ 3  2]]
)

Det(
[[-2  3 -3]
 [10  5  6]
 [ 3  2  1]]
)=
-2 * Det(
[[5 6]
 [2 1]]
)

-3 * Det(
[[10  6]
 [ 3  1]]
)

-3 * Det(
[[10  5]
 [ 3  2]]
)

Det(
[[ 3 -3  4]
 [ 5  6  7]
 [ 2  1  5]]
)=
+3 * Det(
[[6 7]
 [1 5]]
)

+3 * Det(
[[5 7]
 [2 5]]
)

+4 * Det(
[[5 6]
 [2 1]]
)

Det(
[[-2 -3  4]
 [10  6  7]
 [ 3  1  5]]
)=
-2 * Det(
[[6 7]
 [1 5]]
)

+3 * Det(
[[10  7]
 [ 3  5]]
)

+4 * Det(
[[10  6]
 [ 3  1]]
)

Det(
[[-2  3  4]
 [10  5  7]
 [ 3  2  5]]
)=
-2 * Det(
[[5 7]
 [2 5]]
)

-3 * Det(
[[10  7]
 [ 3  5]]
)

+4 * Det(
[[10  5]
 [ 3  2]]
)

Det(
[[-2  3 -3]
 [10  5  6]
 [ 3  2  1]]
)=
-2 * Det(
[[5 6]
 [2 1]]
)

-3 * Det(
[[10  6]
 [ 3  1]]
)

-3 * Det(
[[10  5]
 [ 3  2]]
)


|7 3|
|5 4| = 13.000000000000005
|6 3|
|1 4| = 21.0
|6 7|
|1 5| = 23.0
|7 3|
|5 4| = 13.000000000000005
|5 3|
|2 4| = 13.999999999999996
|5 7|
|2 5| = 10.999999999999996
|6 3|
|1 4| = 21.0
|5 3|
|2 4| = 13.999999999999996
|5 6|
|2 1| = -7.000000000000001
|6 7|
|1 5| = 23.0
|5 7|
|2 5| = 10.999999999999996
|5 6|
|2 1| = -7.000000000000001
|7 3|
|5 4| = 13.000000000000005
|6 3|
|1 4| = 21.0
|6 7|
|1 5| = 23.0
|7 3|
|5 4| = 13.000000000000005
|10 3|
|3 4| = 31.0
|10 7|
|3 5| = 29.000000000000004
|6 3|
|1 4| = 21.0
|10 3|
|3 4| = 31.0
|10 6|
|3 1| = -8.000000000000005
|6 7|
|1 5| = 23.0
|10 7|
|3 5| = 29.000000000000004
|10 6|
|3 1| = -8.000000000000005
|7 3|
|5 4| = 13.000000000000005
|5 3|
|2 4| = 13.999999999999996
|5 7|
|2 5| = 10.999999999999996
|7 3|
|5 4| = 13.000000000000005
|10 3|
|3 4| = 31.0
|10 7|
|3 5| = 29.000000000000004
|5 3|
|2 4| = 13.999999999999996
|10 3|
|3 4| = 31.0
|10 5|
|3 2| = 4.999999999999998
|5 7|
|2 5| = 10.999999999999996
|10 7|
|3 5| = 29.000000000000004
|10 5|
|3 2| = 4.999999999999998
|6 3|
|1 4| = 21.0
|5 3|
|2 4| = 13.999999999999996
|5 6|
|2 1| = -7.000000000000001
|6 3|
|1 4| = 21.0
|10 3|
|3 4| = 31.0
|10 6|
|3 1| = -8.000000000000005
|5 3|
|2 4| = 13.999999999999996
|10 3|
|3 4| = 31.0
|10 5|
|3 2| = 4.999999999999998
|5 6|
|2 1| = -7.000000000000001
|10 6|
|3 1| = -8.000000000000005
|10 5|
|3 2| = 4.999999999999998
|6 7|
|1 5| = 23.0
|5 7|
|2 5| = 10.999999999999996
|5 6|
|2 1| = -7.000000000000001
|6 7|
|1 5| = 23.0
|10 7|
|3 5| = 29.000000000000004
|10 6|
|3 1| = -8.000000000000005
|5 7|
|2 5| = 10.999999999999996
|10 7|
|3 5| = 29.000000000000004
|10 5|
|3 2| = 4.999999999999998
|5 6|
|2 1| = -7.000000000000001
|10 6|
|3 1| = -8.000000000000005
|10 5|
|3 2| = 4.999999999999998

코팩터 전개 방식 행렬식 계산: (-1292.9999999999998) + (-427.0000000000008) + (2044.0000000000002) + (1608.0000000000005) + (-762.9999999999994) = 1169.000000000001

2. 가우스 소거법 방식:
행 2 -> 행 2 - (0.67) * 행 1:
[[  3.           7.           4.           6.           7.        ]
 [  0.          -7.66666667   2.33333333 -11.          -4.66666667]
 [ -2.           3.          -3.           4.           2.        ]
 [ 10.           5.           6.           7.           3.        ]
 [  3.           2.           1.           5.           4.        ]]

행 3 -> 행 3 - (-0.67) * 행 1:
[[  3.           7.           4.           6.           7.        ]
 [  0.          -7.66666667   2.33333333 -11.          -4.66666667]
 [  0.           7.66666667  -0.33333333   8.           6.66666667]
 [ 10.           5.           6.           7.           3.        ]
 [  3.           2.           1.           5.           4.        ]]

행 4 -> 행 4 - (3.33) * 행 1:
[[  3.           7.           4.           6.           7.        ]
 [  0.          -7.66666667   2.33333333 -11.          -4.66666667]
 [  0.           7.66666667  -0.33333333   8.           6.66666667]
 [  0.         -18.33333333  -7.33333333 -13.         -20.33333333]
 [  3.           2.           1.           5.           4.        ]]

행 5 -> 행 5 - (1.00) * 행 1:
[[  3.           7.           4.           6.           7.        ]
 [  0.          -7.66666667   2.33333333 -11.          -4.66666667]
 [  0.           7.66666667  -0.33333333   8.           6.66666667]
 [  0.         -18.33333333  -7.33333333 -13.         -20.33333333]
 [  0.          -5.          -3.          -1.          -3.        ]]

행 3 -> 행 3 - (-1.00) * 행 2:
[[  3.           7.           4.           6.           7.        ]
 [  0.          -7.66666667   2.33333333 -11.          -4.66666667]
 [  0.           0.           2.          -3.           2.        ]
 [  0.         -18.33333333  -7.33333333 -13.         -20.33333333]
 [  0.          -5.          -3.          -1.          -3.        ]]

행 4 -> 행 4 - (2.39) * 행 2:
[[  3.           7.           4.           6.           7.        ]
 [  0.          -7.66666667   2.33333333 -11.          -4.66666667]
 [  0.           0.           2.          -3.           2.        ]
 [  0.           0.         -12.91304348  13.30434783  -9.17391304]
 [  0.          -5.          -3.          -1.          -3.        ]]

행 5 -> 행 5 - (0.65) * 행 2:
[[  3.           7.           4.           6.           7.        ]
 [  0.          -7.66666667   2.33333333 -11.          -4.66666667]
 [  0.           0.           2.          -3.           2.        ]
 [  0.           0.         -12.91304348  13.30434783  -9.17391304]
 [  0.           0.          -4.52173913   6.17391304   0.04347826]]

행 4 -> 행 4 - (-6.46) * 행 3:
[[  3.           7.           4.           6.           7.        ]
 [  0.          -7.66666667   2.33333333 -11.          -4.66666667]
 [  0.           0.           2.          -3.           2.        ]
 [  0.           0.           0.          -6.06521739   3.73913043]
 [  0.           0.          -4.52173913   6.17391304   0.04347826]]

행 5 -> 행 5 - (-2.26) * 행 3:
[[  3.           7.           4.           6.           7.        ]
 [  0.          -7.66666667   2.33333333 -11.          -4.66666667]
 [  0.           0.           2.          -3.           2.        ]
 [  0.           0.           0.          -6.06521739   3.73913043]
 [  0.           0.           0.          -0.60869565   4.56521739]]

행 5 -> 행 5 - (0.10) * 행 4:
[[  3.           7.           4.           6.           7.        ]
 [  0.          -7.66666667   2.33333333 -11.          -4.66666667]
 [  0.           0.           2.          -3.           2.        ]
 [  0.           0.           0.          -6.06521739   3.73913043]
 [  0.           0.           0.           0.           4.18996416]]

가우스 소거법 방식 행렬식: 1168.999999999999

==================================================

